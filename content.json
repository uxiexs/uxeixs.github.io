[{"title":"qshell","date":"2017-03-18T16:08:39.000Z","path":"2017/03/19/qshell/","text":"简介qshell是利用七牛文档上公开的API实现的一个方便开发者测试和使用七牛API服务的命令行工具。该工具设计和开发的主要目的就是帮助开发者快速解决问题。目前该工具融合了七牛存储，CDN，以及其他的一些七牛服务中经常使用到的方法对应的便捷命令，比如b64decode，就是用来解码七牛的URL安全的Base64编码用的，所以这是一个面向开发者的工具，任何新的被认为适合加到该工具中的命令需求，都可以在ISSUE列表里面提出来，我们会尽快评估实现，以帮助大家更好地使用七牛服务。 下载该工具使用Go语言编写而成，当然为了方便不熟悉Go或者急于使用工具来解决问题的开发者，我们提供了预先编译好的各主流操作系统平台的二进制文件供大家下载使用，由于平台的多样性，我们把这些二进制打包放到一个文件里面，请大家根据下面的说明各自选择合适的版本来使用。在文档中的例子里面，为了方便，我们统一使用qshell这个命令来做介绍。 版本 支持平台 链接 更新日志 qshell v2.0.5 Linux (32, 64位，arm平台), Windows(32, 64位), Mac OSX(32, 64位) 下载 查看 安装该工具由于是命令行工具，所以只需要从上面的下载链接下载zip包之后解压即可使用。其中文件名和对应系统关系如下： 文件名 描述 qshell_linux_386 Linux 32位系统 qshell_linux_amd64 Linux 64位系统 qshell_linux_arm Linux ARM CPU qshell_windows_386.exe Windows 32位系统 qshell_windows_amd64.exe Windows 64位系统 qshell_darwin_386 Mac 32位系统，这种系统很老了 qshell_darwin_amd64 Mac 64位系统，主流的系统 Linux和Mac平台 （1）权限如果在Linux或者Mac系统上遇到Permission Denied的错误，请使用命令chmod +x qshell来为文件添加可执行权限。这里的qshell是上面文件重命名之后的简写。 （2）任何位置运行对于Linux或者Mac，如果希望能够在任何位置都可以执行，那么可以把qshell所在的目录加入到环境变量$PATH中去。假设qshell命令被解压到路径/home/jemy/tools目录下面，那么我们可以把如下的命令写入到你所使用的bash所对应的配置文件中，如果是/bin/bash，那么就是~/.bashrc文件，如果是/bin/zsh，那么就是~/.zshrc文件中。写入的内容为： 1export PATH=$PATH:/home/jemy/tools 保存完毕之后，可以通过两种方式立即生效，其一为输入source ~/.zshrc或者source ~/.bashrc来使配置立即生效，或者完全关闭命令行，然后重新打开一个即可，接下来就可以在任何位置使用qshell命令了。 Windows平台 （1）闪退问题本工具是一个命令行工具，在Windows下面请先打开命令行终端，然后输入工具名称执行，不要双击打开，否则会出现闪退现象。 （2）任何位置运行如果你希望可以在任意目录下使用qshell，请将qshell工具可执行文件所在目录添加到系统的环境变量中。由于Windows系统是图形界面，所以方便一点。假设qshell.exe命令被解压到路径E:\\jemy\\tools目录下面，那么我们把这个目录放到系统的环境变量PATH里面。 密钥设置该工具有两类命令，一类需要鉴权，另一类不需要。 需要鉴权的命令都需要依赖七牛账号下的 AccessKey 和 SecretKey。所以这类命令运行之前，需要使用 account 命令来设置下 AccessKey ，SecretKey 。 单用户模式： 1$ qshell account ak sk 多用户模式： 1$ qshell -m account ak sk 多用户模式和其他的工具一样，本工具也会在使用的过程中，向本地磁盘写入一些文件，比如上面的account设置的 AccessKey 和 SecretKey 都是加密后保存在本地磁盘上的。另外还有qupload和qdownload功能也会向本地磁盘写入一些文件。 默认情况下，工具的使用模式是单用户模式，用户的所有信息写入到磁盘$HOME_DIR/.qshell下面。即如果你用account设置了新的密钥，那么这个新的密钥将覆盖旧的密钥。这个$HOME_DIR在Linux或者Mac下就是~所表示的目录。如果是Windows下则是C:\\Users\\jemy这样的路径。 但是有些情况下，我们可能拥有多个账号，比如同时拥有测试环境的账号和线上环境的账号，这种情况下，怎么让qshell同时支持多组AccessKey和SecretKey的设置呢？ 为了解决这个问题，我们引入了选项-m。当在使用qshell的时候，指定该选项的话，就会切换到多用户模式下，在这种模式下，工具会把所有的临时文件都写到工具执行的目录。 基于上面的功能，我们可以创建一些专用的目录，用来切换到qshell的多用户模式运行。假设本地有如目录/Users/jemy/Temp/qshell/workdir，这个目录下分别有env_dev和env_prod两种环境的账号。 我们分别在目录env_dev和env_prod目录下，运行qshell -m account ak sk来设置不同账号的密钥对，结果如下： 12345678$ tree -a├── env_dev│ └── .qshell│ └── account.json└── env_prod └── .qshell └── account.json 这样其他的依赖AccessKey和SecretKey的命令都可以使用-m选项在这个目录下执行命令，例如stat获取文件信息： 12$ cd /Users/jemy/Temp/qshell/workdir/env_dev$ qshell -m stat bucket key 命令选项该工具还有一些有用的选项参数如下： 参数 描述 -d 设置是否输出DEBUG日志，如果指定这个选项，则输出DEBUG级别的日志 -m 切换到多用户模式，这样所有的临时文件写入都在命令运行的目录下 -h 打印命令列表帮助信息，遇到参数忘记的情况下，可以使用该命令 -v 打印工具版本，反馈问题的时候，请提前告知工具对应版本号 命令列表 命令 类别 描述 详细 account 账号 设置或显示当前用户的AccessKey和SecretKey 文档 dircache 存储 输出本地指定路径下所有的文件列表 文档 listbucket 存储 列举七牛空间里面的所有文件 文档 prefop 存储 查询七牛数据处理的结果 文档 fput 存储 以文件表单的方式上传一个文件 文档 rput 存储 以分片上传的方式上传一个文件 文档 qupload 存储 同步数据到七牛空间， 带同步进度信息，和数据上传完整性检查 文档 qdownload 存储 从七牛空间同步数据到本地，支持只同步某些前缀的文件，支持增量同步 文档 stat 存储 查询七牛空间中一个文件的基本信息 文档 delete 存储 删除七牛空间中的一个文件 文档 move 存储 移动或重命名七牛空间中的一个文件 文档 copy 存储 复制七牛空间中的一个文件 文档 chgm 存储 修改七牛空间中的一个文件的MimeType 文档 fetch 存储 从Internet上抓取一个资源并存储到七牛空间中 文档 sync 存储 从Internet上抓取一个资源并存储到七牛空间中，适合大文件的场合 文档 prefetch 存储 更新七牛空间中从源站镜像过来的文件 文档 batchdelete 存储 批量删除七牛空间中的文件，可以直接根据listbucket的结果来删除 文档 batchchgm 存储 批量修改七牛空间中文件的MimeType 文档 batchcopy 存储 批量复制七牛空间中的文件到另一个空间 文档 batchmove 存储 批量移动七牛空间中的文件到另一个空间 文档 batchrename 存储 批量重命名七牛空间中的文件 文档 batchsign 存储 批量根据资源的公开外链生成资源的私有外链 文档 privateurl 存储 生成私有空间资源的访问外链 文档 saveas 存储 实时处理的saveas链接快捷生成工具 文档 reqid 存储 七牛自定义头部X-Reqid解码工具 文档 buckets 存储 获取当前账号下所有的空间名称 文档 domains 存储 获取指定空间的所有关联域名 文档 qetag 存储 根据七牛的qetag算法来计算文件的hash 文档 m3u8delete 存储 根据流媒体播放列表文件删除七牛空间中的流媒体切片 文档 m3u8replace 存储 修改流媒体播放列表文件中的切片引用域名 文档 cdnrefresh CDN 批量刷新cdn的访问外链或目录 文档 cdnprefetch CDN 批量预取cdn的访问外链 文档 b64encode 工具 base64编码工具，可选是否使用UrlSafe方式，默认UrlSafe 文档 b64decode 工具 base64解码工具，可选是否使用UrlSafe方式，默认UrlSafe 文档 urlencode 工具 url编码工具 文档 urldecode 工具 url解码工具 文档 ts2d 工具 将timestamp(单位秒)转为UTC+8:00中国日期，主要用来检查上传策略的deadline参数 文档 tms2d 工具 将timestamp(单位毫秒)转为UTC+8:00中国日期 文档 tns2d 工具 将timestamp(单位100纳秒)转为UTC+8:00中国日期 文档 d2ts 工具 将日期转为timestamp(单位秒) 文档 ip 工具 根据淘宝的公开API查询ip地址的地理位置 文档 unzip 工具 解压zip文件，支持UTF-8编码和GBK编码 文档 alilistbucket 第三方 列举阿里OSS空间里面的所有文件 文档 项目编译如果对项目编译感兴趣，请按照如下方式进行： 1234567$ go get github.com/astaxie/beego/logs$ go get github.com/fsnotify/fsnotify$ go get github.com/syndtr/goleveldb/leveldb$ go get github.com/yanunon/oss-go-api/oss$ go get golang.org/x/text/encoding/simplifiedchinese$ go get golang.org/x/sys/unix$ ./build.sh 如果上面的 golang.org/x 下面的包因为被墙而无法下载，那么可以使用 git clone 分别将依赖的库下载到本地的GOPATH中： 12git clone https://github.com/golang/sys.git $GOPATH/src/golang.org/x/sysgit clone https://github.com/golang/text.git $GOPATH/src/golang.org/x/text 对于跨平台的编译脚本 cross-build-main.sh 编译出来的二进制文件存在的已知问题如下： crontab下面引用qshell出错 问题反馈如果您有任何问题，请写在ISSUE列表里面，我们会尽快回复您。 技术讨论如果您希望和在工作中使用qshell的其他人进行交流，可以加入QQ群：343822521 。","tags":[{"name":"qshell","slug":"qshell","permalink":"//litten.me/tags/qshell/"}]},{"title":"atom shortcuts","date":"2017-03-18T07:08:25.000Z","path":"2017/03/18/atom shurtcuts/","text":"文件切换ctrl-shift-s 保存所有打开的文件cmd-shift-o 打开目录cmd-\\ 显示或隐藏目录树ctrl-0 焦点移到目录树目录树下，使用a，m，delete来增加，修改和删除cmd-t或cmd-p 查找文件cmd-b 在打开的文件之间切换cmd-shift-b 只搜索从上次git commit后修改或者新增的文件 导航（等价于上下左右）ctrl-p 前一行ctrl-n 后一行ctrl-f 前一个字符ctrl-b 后一个字符 alt-B, alt-left 移动到单词开始alt-F, alt-right 移动到单词末尾 cmd-right, ctrl-E 移动到一行结束cmd-left, ctrl-A 移动到一行开始 cmd-up 移动到文件开始cmd-down 移动到文件结束 ctrl-g 移动到指定行 row:column 处 cmd-r 在方法之间跳转 目录树操作cmd-\\ 或者 cmd-k cmd-b 显示(隐藏)目录树ctrl-0 焦点切换到目录树(再按一次或者Esc退出目录树)a 添加文件d 将当前文件另存为(duplicate)i 显示(隐藏)版本控制忽略的文件alt-right 和 alt-left 展开(隐藏)所有目录ctrl-al-] 和 ctrl-al-[ 同上ctrl-[ 和 ctrl-] 展开(隐藏)当前目录ctrl-f 和 ctrl-b 同上cmd-k h 或者 cmd-k left 在左半视图中打开文件cmd-k j 或者 cmd-k down 在下半视图中打开文件cmd-k k 或者 cmd-k up 在上半视图中打开文件cmd-k l 或者 cmd-k right 在右半视图中打开文件ctrl-shift-C 复制当前文件绝对路径 书签cmd-F2 在本行增加书签F2 跳到当前文件的下一条书签shift-F2 跳到当前文件的上一条书签ctrl-F2 列出当前工程所有书签 选取 大部分和导航一致，只不过加上shift ctrl-shift-P 选取至上一行ctrl-shift-N 选取至下一样ctrl-shift-B 选取至前一个字符ctrl-shift-F 选取至后一个字符alt-shift-B, alt-shift-left 选取至字符开始alt-shift-F, alt-shift-right 选取至字符结束ctrl-shift-E, cmd-shift-right 选取至本行结束ctrl-shift-A, cmd-shift-left 选取至本行开始cmd-shift-up 选取至文件开始cmd-shift-down 选取至文件结尾cmd-A 全选cmd-L 选取一行，继续按回选取下一行ctrl-shift-W 选取当前单词 编辑和删除文本基本操作ctrl-T 使光标前后字符交换cmd-J 将下一行与当前行合并ctrl-cmd-up, ctrl-cmd-down 使当前行向上或者向下移动cmd-shift-D 复制当前行到下一行cmd-K, cmd-U 使当前字符大写cmd-K, cmd-L 使当前字符小写cmd-shift-P 搜索命令 删除和剪切ctrl-shift-K 删除当前行cmd-backspace 删除到当前行开始cmd-fn-backspace 删除到当前行结束ctrl-K 剪切到当前行结束alt-backspace 或 alt-H 删除到当前单词开始alt-delete 或 alt-D 删除到当前单词结束 多光标和多处选取cmd-click 增加新光标cmd-shift-L 将多行选取改为多行光标ctrl-shift-up, ctrl-shift-down 增加上（下）一行光标cmd-D 选取文档中和当前单词相同的下一处ctrl-cmd-G 选取文档中所有和当前光标单词相同的位置 括号跳转ctrl-m 相应括号之间，html tag之间等跳转ctrl-cmd-m 括号(tag)之间文本选取alt-cmd-. 关闭当前XML/HTML tag 编码方式ctrl-shift-U 调出切换编码选项 查找和替换cmd-F 在buffer中查找cmd-shift-f 在整个工程中查找 代码片段alt-shift-S 查看当前可用代码片段 在~/.atom目录下snippets.cson文件中存放了你定制的snippets 定制说明 自动补全ctrl-space 提示补全信息 折叠alt-cmd-[ 折叠alt-cmd-] 展开alt-cmd-shift-{ 折叠全部alt-cmd-shift-} 展开全部cmd-k cmd-N 指定折叠层级 N为层级数 文件语法高亮ctrl-shift-L 选择文本类型 使用Atom进行写作ctrl-shift-M Markdown预览可用代码片段 b, legal, img, l, i, code, t, table git操作cmd-alt-Z checkout HEAD 版本cmd-shift-B 弹出untracked 和 modified文件列表alt-g down alt-g up 在修改处跳转alt-G D 弹出diff列表alt-G O 在github上打开文件alt-G G 在github上打开项目地址alt-G B 在github上打开文件blamealt-G H 在github上打开文件historyalt-G I 在github上打开issuesalt-G R 在github打开分支比较alt-G C 拷贝当前文件在gihub上的网址 推荐一些好用的插件 主题atom-material-ui 好看到爆atom-material-syntax 美化atom-beautify 一键代码美化file-icons 给文件加上好看的图标atom-minimap 方便美观的缩略滚动图pretty-json json格式化工具activate-power-mode 炫酷的打字特效 gitatomatigit 可视化git操作git-time-machine git版本对比工具，可视化选择每一个commitmerge-conflicts 合并冲突可视化工具 代码提示emmet 这个不用介绍了吧atom-ternjs js代码提示很强大，高度定制化docblockr jsdoc 给js添加注释autoclose-html 闭合html标签color-picker 取色器 必备插件pigments 颜色显示插件 必装terminal-panel 直接在atom里面写命令了svg-preview svg预览 便捷操作advanced-open-file 快速打开、切换文件project-folder 快速打开、切换项目script 立即执行当前js文件 高亮language-vue vue框架代码高亮 终端platformio-atom-ide-terminal 终端插件，支持显示、隐藏及多窗口 就这些了，欢迎pull更多好用的插件！","tags":[{"name":"atom","slug":"atom","permalink":"//litten.me/tags/atom/"}]}]